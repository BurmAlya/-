Блочная (корзинная) сортировка
Код

def bucket_sort(arr, num_buckets=10):
    """
    Блочная (корзинная) сортировка.
    
    Параметры:
        arr (list): список чисел для сортировки (float или int).
        num_buckets (int): количество корзин (по умолчанию 10).
    
    Возвращает:
        list: отсортированный список.
    """
    if len(arr) == 0:
        return arr

    # Находим минимум и максимум для равномерного распределения по корзинам
    min_val = min(arr)
    max_val = max(arr)

    # Если все элементы одинаковы, возвращаем исходный массив
    if min_val == max_val:
        return arr

    # Создаём корзины (пустые списки)
    buckets = [[] for _ in range(num_buckets)]

    # Распределяем элементы по корзинам
    for num in arr:
        # Вычисляем индекс корзины
        # Нормализуем значение к диапазону [0, 1), затем умножаем на num_buckets
        index = int((num - min_val) / (max_val - min_val) * (num_buckets - 1))
        buckets[index].append(num)

    # Сортируем каждую корзину (алгоритмом вставки)
    for bucket in buckets:
        insertion_sort(bucket)

    # Объединяем корзины в один отсортированный массив
    sorted_arr = []
    for bucket in buckets:
        sorted_arr.extend(bucket)

    return sorted_arr



def insertion_sort(arr):
    """
    Сортировка вставками для отдельной корзины.
    
    Параметры:
        arr (list): список для сортировки.
    """
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > key:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key



# Пример использования
if __name__ == "__main__":
    # Тестовый массив
    data = [0.89, 0.56, 0.65, 0.12, 0.34, 0.98, 0.23, 0.76, 0.45, 0.01]
    print("Исходный массив:", data)

    sorted_data = bucket_sort(data, num_buckets=5)
    print("Отсортированный массив:", sorted_data)

Результат работы алгоритма
               
Исходный массив: [0.89, 0.56, 0.65, 0.12, 0.34, 0.98, 0.23, 0.76, 0.45, 0.01]
Отсортированный массив: [0.01, 0.12, 0.23, 0.34, 0.45, 0.56, 0.65, 0.76, 0.89, 0.98]





Блинная сортировка































